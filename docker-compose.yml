services:
  api:
    build:
      context: ./services/api
      args:
        SERVICE_PORT: ${API_PORT}
    environment:
      - SERVICE_PORT=${API_PORT}
      - BRAIN_HOST=brain
      - BRAIN_PORT=${BRAIN_PORT}
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./services/api/app:/app/app
      - ./shared:/app/shared

  brain:
    build:
      context: ./services/brain
      args:
        SERVICE_PORT: ${BRAIN_PORT}
    environment:
      - SERVICE_PORT=${BRAIN_PORT}
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=${CHROMADB_PORT}
      - CONTACTS_HOST=contacts
      - CONTACTS_PORT=${CONTACTS_PORT}
      - SUMMARIZE_HOST=summarize
      - SUMMARIZE_PORT=${SUMMARIZE_PORT}
      - SCHEDULER_HOST=scheduler
      - SCHEDULER_PORT=${SCHEDULER_PORT}
    ports:
      - "${BRAIN_PORT}:${BRAIN_PORT}"
    volumes:
      - ./services/brain/app:/app/app
      - ./shared:/app/shared

  chromadb:
    build:
      context: ./services/chromadb
      args:
        SERVICE_PORT: ${CHROMADB_PORT}
    environment:
      - SERVICE_PORT=${CHROMADB_PORT}
    ports:
      - "${CHROMADB_PORT}:${CHROMADB_PORT}"
    volumes:
      - ./services/chromadb/app:/app/app
      - ./shared:/app/shared

  contacts:
    build:
      context: ./services/contacts
      args:
        SERVICE_PORT: ${CONTACTS_PORT}
    environment:
      - SERVICE_PORT=${CONTACTS_PORT}
    ports:
      - "${CONTACTS_PORT}:${CONTACTS_PORT}"
    volumes:
      - ./services/contacts/app:/app/app
      - ./shared:/app/shared

  imessage:
    build:
      context: ./services/imessage
      args:
        SERVICE_PORT: ${IMESSAGE_PORT}
    environment:
      - SERVICE_PORT=${IMESSAGE_PORT}
      - BLUEBUBBLES_HOST=${BLUEBUBBLES_HOST}
      - BLUEBUBBLES_PORT=${BLUEBUBBLES_PORT}
      - BLUEBUBBLES_PASSWORD=${BLUEBUBBLES_PASSWORD}
      - BRAIN_HOST=brain
      - BRAIN_PORT=${BRAIN_PORT}
    ports:
      - "${IMESSAGE_PORT}:${IMESSAGE_PORT}"
    volumes:
      - ./services/imessage/app:/app/app
      - ./shared:/app/shared

  proxy:
    build:
      context: ./services/proxy
      args:
        SERVICE_PORT: ${PROXY_PORT}
    environment:
      - SERVICE_PORT=${PROXY_PORT}
      - LLM_MODEL_NAME=${LLM_MODEL_NAME}
      - OLLAMA_SERVER_HOST=${OLLAMA_SERVER_HOST}
      - OLLAMA_SERVER_PORT=${OLLAMA_SERVER_PORT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${PROXY_PORT}:${PROXY_PORT}"
    volumes:
      - ./services/proxy/app:/app/app
      - ./shared:/app/shared

  scheduler:
    build:
      context: ./services/scheduler
      args:
        SERVICE_PORT: ${SCHEDULER_PORT}
    environment:
      - SERVICE_PORT=${SCHEDULER_PORT}
    ports:
      - "${SCHEDULER_PORT}:${SCHEDULER_PORT}"
    volumes:
      - ./services/scheduler/app:/app/app
      - ./shared:/app/shared

  summarize:
    build:
      context: ./services/summarize
      args:
        SERVICE_PORT: ${SUMMARIZE_PORT}
    environment:
      - SERVICE_PORT=${SUMMARIZE_PORT}
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=${CHROMADB_PORT}
    ports:
      - "${SUMMARIZE_PORT}:${SUMMARIZE_PORT}"
    volumes:
      - ./services/summarize/app:/app/app
      - ./shared:/app/shared


  mongodb:
    image: "mongo:6.0"  
    restart: "on-failure"
    networks:
      - graylog
    volumes:
      - "mongodb_data:/data/db"
      - "mongodb_config:/data/configdb"  

  datanode:
    image: "${DATANODE_IMAGE:-graylog/graylog-datanode:6.1}"
    hostname: "datanode"
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_DATANODE_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp"   # DataNode API
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    networks:
      - graylog  
    volumes:
      - "graylog-datanode:/var/lib/graylog-datanode"
    restart: "on-failure"

  # Graylog: https://hub.docker.com/r/graylog/graylog-enterprise
  graylog:
    hostname: "server"
    image: "${GRAYLOG_IMAGE:-graylog/graylog:6.1}"
    depends_on:
      mongodb:
        condition: "service_started"
      datanode:
        condition: "service_started"
    entrypoint: "/usr/bin/tini --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/data/node-id"
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2:?Please configure GRAYLOG_ROOT_PASSWORD_SHA2 in the .env file}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
    - "5044:5044/tcp"   # Beats
    - "5140:5140/udp"   # Syslog
    - "5140:5140/tcp"   # Syslog
    - "5555:5555/tcp"   # RAW TCP
    - "5555:5555/udp"   # RAW UDP
    - "9000:9000/tcp"   # Server API
    - "12201:12201/tcp" # GELF TCP
    - "12201:12201/udp" # GELF UDP
    - "13301:13301/tcp" # Forwarder data
    - "13302:13302/tcp" # Forwarder config
    networks:
      - graylog
      - default
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
    restart: "on-failure"

networks:
  graylog:
    driver: "bridge"

volumes:
  mongodb_data:
  mongodb_config:
  graylog-datanode:
  graylog_data:

